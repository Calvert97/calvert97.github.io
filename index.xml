<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Calvert‘s Website</title>
    <link>http://calvertlee.top/</link>
    <description>Recent content in Home on Calvert‘s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© 2020-2021 Calvert Lee</copyright>
    <lastBuildDate>Wed, 05 May 2021 18:30:00 +0600</lastBuildDate>
    
	<atom:link href="http://calvertlee.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub</title>
      <link>http://calvertlee.top/github/</link>
      <pubDate>Fri, 24 Jul 2020 08:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/github/</guid>
      <description>test </description>
    </item>
    
    <item>
      <title>Album</title>
      <link>http://calvertlee.top/album/</link>
      <pubDate>Fri, 24 Jul 2020 08:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/album/</guid>
      <description>test </description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://calvertlee.top/about/</link>
      <pubDate>Fri, 24 Jul 2020 08:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/about/</guid>
      <description>Hi, I&amp;rsquo;m Calvert Lee, a front-End development of primary school students from China.
 🔭 I’m currently working on [Quadrotor Trajectory Tracking with FO-SMC] 🌱 I’m currently learning JavaScript 👯 I’m looking to collaborate on [Control Theory of Quadrotor] 💬 Ask me about anything here  Next, please accept my charm unconditionally 😎
  Hahaha~Have you been moved by my appearance 😌
I am a graduate student in Inner Mongolia University.</description>
    </item>
    
    <item>
      <title>QGC地面站下载PX4自驾仪自定义固件版本方法</title>
      <link>http://calvertlee.top/docs/qgc%E5%9C%B0%E9%9D%A2%E7%AB%99%E4%B8%8B%E8%BD%BDpx4%E8%87%AA%E9%A9%BE%E4%BB%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BA%E4%BB%B6%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 05 May 2021 18:30:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/qgc%E5%9C%B0%E9%9D%A2%E7%AB%99%E4%B8%8B%E8%BD%BDpx4%E8%87%AA%E9%A9%BE%E4%BB%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BA%E4%BB%B6%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/</guid>
      <description>打开“QGroundControl”软件并进行下列 操作：
  点击设置按钮(齿轮形状)；
  点击“Firmware”标签，此时用USB 数据线连接Pixhawk自驾仪，地面站会自 动检测自驾仪；
  勾选“advanced settings”选择框；
  在弹出标签页中选择 Custom firmware file ..选项；
  点击“OK”按钮；
  此时会弹出Windows的文件选择界面，选择*.px4文件，并点击“打开”按钮，此时地面站会将固件上传并烧录到Pixhawk自驾仪中。
    </description>
    </item>
    
    <item>
      <title>创建一个FlightGear运行脚本</title>
      <link>http://calvertlee.top/matlab/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAflightgear%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 05 May 2021 18:30:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/matlab/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAflightgear%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</guid>
      <description>要以所需的初始条件（位置，日期，时间，天气，操作模式）启动FlightGear，最好通过使用Generate Run Script Block或使用FlightGear随附的界面来创建运行脚本。
如果要为要链接到FlightGear的每个模型制作单独的运行脚本，然后将它们放置在单独的目录中，请在启动Simulink模型之前从MATLAB界面运行相应的脚本。
1. 使用Generate Run Script Block 创建运行脚本   打开飞行模拟器接口子库。
  创建新的Simulink模型或打开现有模型。
  将“生成运行脚本”块拖到Simulink图中。
  双击“生成运行脚本”块。它的对话框打开。观察三个窗格，FlightGear，Network和File。     在“文件”选项卡的“输出文件名” 参数中，键入输出文件的名称。该名称应该是您要使用这些初始参数启动FlightGear的命令的名称。使用适当的文件扩展名：
Win--*.bat Linux,Mac--*.sh
  在“文件” 选项卡的FlightGear基本目录参数中 ，指定FlightGear安装文件夹的名称。
  在“文件”选项卡的FlightGear几何体模型名称”参数中，在FlightGear/data/Aircraft文件夹中指定包含所需模型几何体的子文件夹的名称。
  根据需要指定初始条件。
  单击“参数”区域顶部的“生成脚本”按钮。 Aerospace Blockset软件将生成运行脚本，并将其保存在MATLAB工作文件夹中，该文件位于在“文件” &amp;gt;“输出文件名”字段中指定的文件名下。
  选择或清除这些复选框，然后
   若要指示FlightGear在模拟器运行时自动安装所需的场景—选择 在模拟过程中安装FlightGear场景（需要Internet连接）。对于Windows系统，在启用此选项的情况下启动FlightGear时可能会遇到错误消息。有关更多信息，请参阅安装其他FlightGear风景。 禁用FlightGear着色器选项—选择“ 禁用FlightGear着色器选项”。  如果需要，重复步骤5到10以生成其他运行脚本。 单击“确定”关闭对话框。您不需要使用Simulink模型保存“生成运行脚本”块。  生成运行脚本块将运行脚本保存为文本文件到您的工作文件夹中。这是运行脚本文件内容的示例：   2. 使用FlightGear自带的界面 FlightGear启动器GUI（FlightGear的一部分，而不是Aerospace Blockset产品的一部分）使您可以在可见的FlightGear运行命令中构建简单和高级选项。
  在MATLAB命令窗口中，选择快捷方式，然后点击新建快捷方式。将打开“快捷方式编辑器”对话框。</description>
    </item>
    
    <item>
      <title>关于 Flight Gear Simulater</title>
      <link>http://calvertlee.top/matlab/%E5%85%B3%E4%BA%8E-flightgear-simulater/</link>
      <pubDate>Fri, 30 Apr 2021 18:30:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/matlab/%E5%85%B3%E4%BA%8E-flightgear-simulater/</guid>
      <description>在可视化飞行器虚拟仿真之前，需要创建或获取与FlightGear兼容的飞机模型文件。本节说明如何执行此操作。
1. 飞行器模型编辑器和格式 FlightGear支持超过12种3-D几何文件格式。 通常是AC3D格式，其后缀为 *.ac。AC3D是可从处购买的低成本几何编辑器 。
2. 飞行器模型结构和要求 飞行器模型包含在文件夹和子文件夹中。完整的飞机模型必须包含通过名为的所需飞机主文件链接的文件夹。FlightGearRoot/data/Aircraft/model-set.xml
所有其他模型元素都是可选的。这是您可以放置​​在飞机数据文件夹中的可选元素的部分列表：
  模型对象及其形状和颜色
  模型对象的表面位图
  可变几何描述
  驾驶舱仪表3-D模型
  车辆的声音与事件相关（例如，发动机，齿轮，风噪声）
  飞行动力学模型
  模拟器视图
  与飞行器关联的子模型（可独立移动的物品）
不使用这些元素时，模型行为会恢复为默认值。例如，
  默认声音：不发出与车辆相关的声音。
  默认仪器面板：未显示任何仪器。
  模型可以包含以上元素中的一些，全部或至不包含这些元素。如果始终从驾驶舱视图运行FlightGear，则飞机的几何形状通常仅次于仪表的几何形状。
FlightGear文档中包含有关如何包含可选元素的操作方法文档。
3. 所需的飞行动力学模型规格 飞行动力学模型（FDM）规范是飞机模型的必需元素。要将Simulink软件设置为给定几何模型的飞行动力学模型数据流的源，请将此行放入：data/Aircraft/model/model-set.xml:
&amp;lt;flight-model&amp;gt;network&amp;lt;/flight-model&amp;gt;
4. 获取和修改现有的飞行器模型 同时，我们也可以通过参考现有FlightGear模型，声音和其他可选元素，快速地从头开始构建模型。此类模型提供了几何，动力学，乐器，视图和声音的示例。将一个aircraft文件夹复制到一个新名称，重命名model-set.xml文件，将其修改为network flight dynamics，然后将–aircraft标志设置为model-set.xml中的名称来运行FlightGear非常简单。
使用飞行器几何模型 获取，修改或创建飞机数据文件后，需要将其放在正确的文件夹中，以供FlightGear访问。
1. 将飞行器模型导入FlightGear   Windows 平台  转到已安装的FlightGear文件夹。打开data文件夹，然后打开文件Aircraft夹：\FlightGear\data\Aircraft\。 在model此处为您的飞机数据创建一个子文件夹。 将model-set.xml放入该子文件夹，以及所需的任何其他文件。通常的做法是为模型几何文件（\model\）、仪器（\instruments\）和声音（\sounds\）创建子目录。    使用Simulink模型运行FlightGear 要运行飞行器的Simulink模型并同时使用飞机数据文件model-set.</description>
    </item>
    
    <item>
      <title>vs2019 转换Qt Creator 详细讲解</title>
      <link>http://calvertlee.top/docs/vs2019-%E8%BD%AC%E6%8D%A2qt-creator-%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/</link>
      <pubDate>Sun, 14 Mar 2021 08:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/vs2019-%E8%BD%AC%E6%8D%A2qt-creator-%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/</guid>
      <description>1. 在新建项目中 输入QT，(前提是你已经装上了 QT VS TOOLS 扩展) 2. 创建完项目，选择相关依赖的库 3. 右键项目创建pro或在扩展里找到创建pro 创建的时候选择默认选项
此时，生成了两个文件xxx.pro和xxx.pri
4. 在pro文件里加依赖库QT += core gui sql widgets，如图 5. 注释如图的消息宏：message(&amp;quot;You are running qmake on a generated .pro file. This may not work!&amp;quot;) 6. 在QT Creator里构建运行 至此，教程结束，🎉</description>
    </item>
    
    <item>
      <title>Visual Studio 2019配置Qt5开发环境的搭建</title>
      <link>http://calvertlee.top/docs/visual-studio-2019%E9%85%8D%E7%BD%AEqt5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 14 Mar 2021 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/visual-studio-2019%E9%85%8D%E7%BD%AEqt5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</guid>
      <description>1. Qt 5 安装 建议在清华大学开源软件镜像站 Tuna 中下载 ，点击下载 。 下载完成，安装时安装到英文路径下即可。
2. 在Visual Studio 2019中下载Qt VS Tools插件 打开 Visual Studio 2019，在扩展-&amp;gt;管理扩展-&amp;gt;联机-&amp;gt;搜索 qt ，然后下载（注意：下载速度较慢，需要借助科学上网🎉）。下载完毕后关闭 VS ，此时弹出安装界面，选择安装即可。
若出现下图的情况，点击End Task。
安装完毕后点击 Close 。
3. 环境配置 安装完成后，打开 VS。在扩展-&amp;gt;Qt VS Tools-&amp;gt;Qt Options，点击 ADD ，选择相应的路径，然后就会出现版本的名称，名称也可自行修改。但名称应该起的有意义，比如 msvc2017_64 。配置过程见下方图示：
4. 创建项目 在 VS 中创建项目 ，搜索 qt ，然后创建 Qt Widgets Application 项目。
创建成功后可以看见下图
点击 QuadrotorSim.ui 会打开 Qt 设计师。
即可创建UI窗口，然后保存。在 VS 里面运行试试看。
到处，教程就结束了，🔥。</description>
    </item>
    
    <item>
      <title>将inf和nan替换为其他变量</title>
      <link>http://calvertlee.top/matlab/%E5%B0%86inf%E5%92%8Cnan%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%8F%98%E9%87%8F/</link>
      <pubDate>Wed, 03 Mar 2021 08:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/matlab/%E5%B0%86inf%E5%92%8Cnan%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%8F%98%E9%87%8F/</guid>
      <description>在单个变量中，可用if判断语句
Ta = NaN; tfa = isnan(Ta); if (tfa == 1) Ta = 0; end %----------------分割线--------------% Tb = Inf; tfb = isinf(Tb); if (tfb == 1) Tb = 0; end 在矩阵变量中，可用如下方式进行替换
a = 1 NaN 2 3 &amp;gt;&amp;gt; a(isnan(a)) = 123 a = 1 123 2 3 &amp;gt;&amp;gt; a = [1 inf 2 3] a = 1 Inf 2 3 &amp;gt;&amp;gt; a(a == inf) = 123 a = 1 123 2 3 </description>
    </item>
    
    <item>
      <title>参考文献双栏对齐</title>
      <link>http://calvertlee.top/latex/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E5%8F%8C%E6%A0%8F%E5%AF%B9%E9%BD%90/</link>
      <pubDate>Thu, 07 Jan 2021 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/latex/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E5%8F%8C%E6%A0%8F%E5%AF%B9%E9%BD%90/</guid>
      <description>在开头引用 balance:
\usepackage{balance} 在参考文献前，加上：
\balance 原来样式：
balance实现：</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>http://calvertlee.top/docs/shortcodes/</link>
      <pubDate>Tue, 15 Dec 2020 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/shortcodes/</guid>
      <description>Minimo comes with several shortcodes built-in.
 Shortcode: center Center align you content.
center: Parameters  Markdown content between opening and closing tags.  center: Usage Example {{&amp;lt; center &amp;gt;}} _Center Aligned Text_ {{&amp;lt; /center &amp;gt;}} Output:
Center Aligned Text Shortcode: convo Renders conversation blocks.
convo: Parameters  sep [String] (optional): seperator between person and text (default: &amp;ldquo;:&amp;rdquo;)  convo: Inner Syntax person :: text You can remove the person part, if you want.</description>
    </item>
    
    <item>
      <title>Widgets</title>
      <link>http://calvertlee.top/docs/widgets/</link>
      <pubDate>Tue, 15 Dec 2020 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/widgets/</guid>
      <description>Minimo supports Widgets that you can place on specific Widget Areas.
Available Widgets Minimo has the following built-in Widgets:
   Name Slug     About | about Breadcrumbs | breadcrumbs Recent Posts | recent_posts Search | search Sidebar Menu | sidebar_menu Social Menu | social_menu Taxonomy Cloud | taxonomy_cloud  Widget Configuration Options Here are the configuration options available for the Widgets:
Widget: About  about [Map]:  title [String]: Title</description>
    </item>
    
    <item>
      <title>希腊字母与特殊字符</title>
      <link>http://calvertlee.top/latex/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E4%B8%8E%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Tue, 15 Dec 2020 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/latex/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E4%B8%8E%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</guid>
      <description>   常用希腊字母 Latex形式 常用希腊字母 Latex形式     \[\alpha \] \alpha \[\eta \] \eta   \[\beta \] \beta \[\xi \] \xi   \[\gamma \] \gamma \[\pi \] \pi   \[\delta \] \delta \[\rho \] \rho   \[\epsilon \] \epsilon \[\sigma \] \sigma   \[\zeta \] \zeta \[\tau \] \tau   \[\theta \] \theta \[\upsilon \] \upsilon   \[\iota \] \iota \[\phi \] \phi   \[\kappa \] \kappa \[\chi \] \chi   \[\lambda \] \lambda \[\psi \] \psi   \[\mu \] \mu \[\omega \] \omega    </description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>http://calvertlee.top/docs/emoji-support/</link>
      <pubDate>Sat, 12 Dec 2020 06:00:00 +0600</pubDate>
      
      <guid>http://calvertlee.top/docs/emoji-support/</guid>
      <description>首先，如果你想用 emojis 表情, 需要在config.toml 文件中，将 enableEmoji 设置为 true ：
enableEmoji = true 这将使Hugo能够在您的内容文件中找到Emoji缩略词，并将它们呈现为Unicode Emoji Characters。
例如:🔥
它可能不会那么丰富多彩!除非你的设备的操作系统本身就支持彩色的表情符号，否则你会看到一个黑白的。🔥
✏️ 为了获得丰富多彩的外观，必须添加以下内容:
--- emoji: true --- 你在哪里可以找到这些Emoji呢 ❓ Go take a look at🎉 :
Emoji Cheat Sheet 内容较少，但兼容性较高，且均为代码的形式。
Emoji Emoji的官方网站。
符号大全 方便复制Emoji的中文网站。</description>
    </item>
    
    <item>
      <title>溢出的文字省略号显示</title>
      <link>http://calvertlee.top/html&#43;css/%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%87%E5%AD%97%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA/</link>
      <pubDate>Wed, 22 Jan 2020 19:03:00 +0000</pubDate>
      
      <guid>http://calvertlee.top/html&#43;css/%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%87%E5%AD%97%E7%9C%81%E7%95%A5%E5%8F%B7%E6%98%BE%E7%A4%BA/</guid>
      <description>溢出的文字省略号显示 1. 单行文本溢出显示省略号 /* 1. 先强制一行内显示文本*/ white-space: nowrap; (默认 normal 自动换行) /* 2. 超出的部分隐藏*/ overflow: hidden; /* 3. 文字用省略号替代超出的部分*/ text-overflow: ellipsis; 2. 多行文本溢出显示省略号 多行文本溢出显示省略号，有较大兼容性问题，适合webKit浏览器或移动端
overflow: hidden; text-overflow: ellipsis; /* 弹性伸缩盒子模型显示*/ display: -webkit-box; /* 限制在一个块级元素显示的文本的行数*/ -webkit-line-clamp: 2; /* 设置或检索伸缩盒对象的子元素的排列方式*/ -webkit-box-orient: vertical; </description>
    </item>
    
    <item>
      <title>Search</title>
      <link>http://calvertlee.top/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://calvertlee.top/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>